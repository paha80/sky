package kohdeluettelo;
// Generated by ComTest BEGIN
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2015.07.29 23:46:00 // Generated by ComTest
 *
 */
public class KohdeluetteloTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa51 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa51() throws SailoException {    // Kohdeluettelo: 51
    Kohdeluettelo kohdeluettelo = new Kohdeluettelo(); 
    Kohde venus1 = new Kohde(); 
    Kohde venus2 = new Kohde(); 
    venus1.rekisteroi(); 
    venus2.rekisteroi(); 
    assertEquals("From: Kohdeluettelo line: 58", 0, kohdeluettelo.getKohteita()); 
    kohdeluettelo.lisaa(venus1); assertEquals("From: Kohdeluettelo line: 59", 1, kohdeluettelo.getKohteita()); 
    kohdeluettelo.lisaa(venus2); assertEquals("From: Kohdeluettelo line: 60", 2, kohdeluettelo.getKohteita()); 
    kohdeluettelo.lisaa(venus1); assertEquals("From: Kohdeluettelo line: 61", 3, kohdeluettelo.getKohteita()); 
    assertEquals("From: Kohdeluettelo line: 62", 3, kohdeluettelo.getKohteita()); 
    assertEquals("From: Kohdeluettelo line: 63", venus1, kohdeluettelo.annaKohde(0)); 
    assertEquals("From: Kohdeluettelo line: 64", venus2, kohdeluettelo.annaKohde(1)); 
    assertEquals("From: Kohdeluettelo line: 65", venus1, kohdeluettelo.annaKohde(2)); 
    try {
    assertEquals("From: Kohdeluettelo line: 66", venus1, kohdeluettelo.annaKohde(3)); 
    fail("Kohdeluettelo: 66 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaKohdeluokat111 
   * @throws SailoException when error
   */
  @Test
  public void testAnnaKohdeluokat111() throws SailoException {    // Kohdeluettelo: 111
    Kohdeluettelo kohdeluettelo = new Kohdeluettelo(); 
    Kohde venus1 = new Kohde(); 
    Kohde venus2 = new Kohde(); 
    Kohde venus3 = new Kohde(); 
    venus1.rekisteroi(); venus2.rekisteroi(); venus3.rekisteroi(); 
    int id1 = venus1.getKohdeNro(); 
    int id2 = venus2.getKohdeNro(); 
    Kohdeluokka pitsi11 = new Kohdeluokka(id1); kohdeluettelo.lisaa(pitsi11); 
    Kohdeluokka pitsi12 = new Kohdeluokka(id1); kohdeluettelo.lisaa(pitsi12); 
    Kohdeluokka pitsi21 = new Kohdeluokka(id2); kohdeluettelo.lisaa(pitsi21); 
    Kohdeluokka pitsi22 = new Kohdeluokka(id2); kohdeluettelo.lisaa(pitsi22); 
    Kohdeluokka pitsi23 = new Kohdeluokka(id2); kohdeluettelo.lisaa(pitsi23); 
    List<Kohdeluokka> loytyneet; 
    loytyneet = kohdeluettelo.annaKohdeluokat(venus3); 
    assertEquals("From: Kohdeluettelo line: 130", 0, loytyneet.size()); 
    loytyneet = kohdeluettelo.annaKohdeluokat(venus1); 
    assertEquals("From: Kohdeluettelo line: 132", 2, loytyneet.size()); 
    assertEquals("From: Kohdeluettelo line: 133", true, loytyneet.get(0) == pitsi11); 
    assertEquals("From: Kohdeluettelo line: 134", true, loytyneet.get(1) == pitsi12); 
    loytyneet = kohdeluettelo.annaKohdeluokat(venus2); 
    assertEquals("From: Kohdeluettelo line: 136", 3, loytyneet.size()); 
    assertEquals("From: Kohdeluettelo line: 137", true, loytyneet.get(0) == pitsi21); 
  } // Generated by ComTest END
}